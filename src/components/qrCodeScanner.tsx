"use client";

import { Html5QrcodeScanner } from "html5-qrcode";
import { Dispatch, SetStateAction, useEffect, useState } from "react";

type Props = {
  setText: Dispatch<SetStateAction<string>>;
  showScanner: Dispatch<SetStateAction<boolean>>;
};

const QrScanner = ({ setText, showScanner }: Props) => {
  const [permissionGranted, setPermissionGranted] = useState(false);
  const [error, setError] = useState<string>("");

  // Solicita permiss√£o da c√¢mera assim que o componente monta
  useEffect(() => {
    const requestCameraPermission = async () => {
      try {
        // Solicita permiss√£o expl√≠cita para a c√¢mera
        const stream = await navigator.mediaDevices.getUserMedia({ 
          video: { 
            facingMode: 'environment' // Prefere c√¢mera traseira
          } 
        });
        
        // Para o stream imediatamente ap√≥s obter permiss√£o
        stream.getTracks().forEach(track => track.stop());
        setPermissionGranted(true);
      } catch (err) {
        console.error("Erro ao solicitar permiss√£o da c√¢mera:", err);
        setError("Permiss√£o da c√¢mera negada. Por favor, permita o acesso √† c√¢mera.");
      }
    };

    requestCameraPermission();
  }, []);

  useEffect(() => {
    // S√≥ inicia o scanner ap√≥s obter permiss√£o
    if (!permissionGranted) return;

    const scanner = new Html5QrcodeScanner(
      "qr-reader",
      { 
        fps: 10, 
        qrbox: 250,
        // Configura√ß√µes para melhorar a experi√™ncia
        rememberLastUsedCamera: true, // Lembra da √∫ltima c√¢mera usada
        supportedScanTypes: [], // Usa configura√ß√£o padr√£o (QR codes)
        showTorchButtonIfSupported: true, // Mostra bot√£o da lanterna se dispon√≠vel
        showZoomSliderIfSupported: true, // Mostra controle de zoom se dispon√≠vel
        defaultZoomValueIfSupported: 1, // Zoom padr√£o
        // Prefere c√¢mera traseira
        videoConstraints: {
          facingMode: 'environment'
        }
      },
      false
    );

    const onSuccess = (decodedText: string) => {
      setText(decodedText);
      showScanner(false);
      scanner.clear().catch((error) => {
        console.error("Erro ao limpar scanner ap√≥s leitura:", error);
      });
    };

    const onError = (error: any) => {
      // S√≥ mostra erros relevantes, n√£o os de "QR code n√£o encontrado"
      if (!error.toString().includes('No MultiFormat Readers') && 
          !error.toString().includes('NotFoundException')) {
        console.warn("Erro do scanner:", error);
      }
    };

    scanner.render(onSuccess, onError);

    return () => {
      scanner.clear().catch((error) => {
        console.error("Erro ao limpar scanner:", error);
      });
    };
  }, [setText, showScanner, permissionGranted]);

  if (error) {
    return (
      <div className="p-4">
        <h1 className="text-xl font-bold mb-4 text-red-600">Erro de Permiss√£o</h1>
        <p className="text-red-500 mb-4">{error}</p>
        <p className="text-sm text-gray-600">
          Para usar o scanner QR, voc√™ precisa permitir o acesso √† c√¢mera. 
          Verifique as configura√ß√µes do seu navegador e recarregue a p√°gina.
        </p>
        <button 
          onClick={() => window.location.reload()} 
          className="mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
        >
          Recarregar P√°gina
        </button>
      </div>
    );
  }

  if (!permissionGranted) {
    return (
      <div className="p-4">
        <h1 className="text-xl font-bold mb-4">Ler QR Code</h1>
        <p className="text-gray-600">Solicitando permiss√£o da c√¢mera...</p>
        <div className="mt-4 flex justify-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500"></div>
        </div>
      </div>
    );
  }

  return (
    <div>
      <h1 className="text-xl font-bold mb-4">Ler QR Code</h1>
      <div id="qr-reader" className="w-full" />
      <div className="mt-4 text-sm text-gray-600">
        <p>üí° Dicas:</p>
        <ul className="list-disc list-inside mt-2 space-y-1">
          <li>Mantenha o QR code bem iluminado</li>
          <li>Posicione o c√≥digo no centro da tela</li>
          <li>Use a lanterna se dispon√≠vel em ambientes escuros</li>
        </ul>
      </div>
    </div>
  );
};

export default QrScanner;